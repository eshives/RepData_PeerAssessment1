setwd("Emily/Coursera/RepData_PeerAssessment1")
setwd("Emily/Coursera")
getwd()
dat<-read.csv("activity.csv",header=TRUE)
unzip("activity.zip")
dat<-read.csv("activity.csv",header=TRUE)
head(dat)
class(dat$date)
dat$date<-as.Date(dat$date,format="%Y-%m-%d")
head(dat)
class(dat$date)
daily<-with(dat, tapply(steps, date, sum, na.rm=TRUE))
head(daily)
mean(daily)
median(daily)
hist(daily)
hist(daily,xlab="Number of Steps Taken",main="Total Number of Steps Taken Each Day")
hist(daily,xlab="Number of Steps Taken",main="Total Number of Steps Taken Each Day",col="red")
min<-with(dat,tapply(steps,interval,mean,na.rm=TRUE))
head(min)
plot(min$interval,min$steps,type="l")
df<-data.frame(interval=names(min),avgsteps=min)
plot(df$interval,df$avgsteps)
plot(df$interval,df$avgsteps,type="l")
plot(df$interval,df$avgsteps,type="l")
lines(df$interval,df$avgsteps)
class(df$interval)
plot(as.numeric(df$interval),df$avgsteps,type="l")
class(df$avgsteps)
plot(as.numeric(df$interval),as.numeric(df$avgsteps),type="l")
plot(as.numeric(df$interval),as.numeric(df$avgsteps),type="l")
plot(as.numeric(df$interval),as.numeric(df$avgsteps),type="l",ylim=c(0,210))
plot(as.numeric(df$interval),as.numeric(df$avgsteps),type="l",lwd=2)
max(dat$interval)
max(df$interval)
max(as.numeric(df$interval))
View(min)
head(names(min))
head(as.numeric(names(min)))
head(df$avgsteps)
df<-data.frame(interval=as.numeric(names(min)),avgsteps=min)
plot(df$interval,as.numeric(df$avgsteps),type="l",lwd=2)
plot(df$interval,as.numeric(df$avgsteps),type="l",lwd=2,xlab="5-minute interval",ylab="average number of steps taken (across all days",main="Average Number of Steps Taken Across All Days By 5-Minute Interval")
plot(df$interval,as.numeric(df$avgsteps),type="l",lwd=2,xlab="5-minute interval",ylab="average number of steps taken (across all days)",main="Average Number of Steps Taken Across All Days By 5-Minute Interval")
min<-with(dat,tapply(steps,interval,mean,na.rm=TRUE))
df<-data.frame(interval=as.numeric(names(min)),avgsteps=min)
plot(df$interval,as.numeric(df$avgsteps),type="l",lwd=2,xlab="5-minute interval",ylab="average number of steps taken (across all days)",main="Average Number of Steps Taken Across All Days By 5-Minute Interval")
max(df$avgsteps)
which.max(df$avgsteps)
?which.max
df$interval[which.max$avgsteps]
df$interval[which.max(df$avgsteps)]
df$interval[835]
df$avgsteps[835]
df[835,2]
View(min)
min<-with(dat,tapply(steps,interval,mean,na.rm=TRUE))
df<-data.frame(interval=as.numeric(names(min)),avgsteps=min)
plot(df$interval,as.numeric(df$avgsteps),type="l",lwd=2,xlab="5-minute interval",ylab="average number of steps taken (across all days)",main="Average Number of Steps Taken Across All Days By 5-Minute Interval")
sum(is.na(dat$steps))
library(impute)
install.packages("imoute")
install.packages("impute")
source("https://bioconductor.org/biocLite.R")
biocLite()
library(impute)
install.packages("impute")
library(impute)
biocLite("impute")
test<-impute.knn(dat)$steps
test<-impute(dat)$steps
which(is.na(dat$steps))
head(dat$interval[which(is.na(dat$steps))])
sum(is.na(dat$steps))
head(min(dat$interval[which(is.na(dat$steps))]))
head(min[dat$interval[which(is.na(dat$steps))],])
min[0]
min[5]
min[15]
head(min[dat$interval[which(is.na(dat$steps))]])
?ifelse
dat2<-within(dat, steps <- ifelse(is.na(dat$steps), steps, min[dat$interval]))
View(dat2)
head(min(dat$interval))
min(dat$interval)
head(dat$interval)
min[10]
head(min[dat$interval])
dat2<-within(dat, steps <- ifelse(is.na(dat$steps), min[dat$interval], steps))
View(dat2)
daily2<-with(dat2, tapply(steps, date, sum, na.rm=TRUE))
hist(daily2,xlab="Number of Steps Taken",main="Total Number of Steps Taken Each Day with Imputed Values",col="red")
mean(daily2)
median(daily2)
weekdays(now())
weekdays(Sys.time()
weekdays(Sys.time())
dat2$weekdaystatus<-ifelse((weekdays(dat2$date)=="Saturday"|weekdays(dat2$date)=="Sunday"),"weekend","weekday")
View(dat2$weekdaystatus)
dat2$weekdaystatus
View(dat2)
unique(dat2$weekdaystatus)
class(dat2$weekdaystatus)
dat2$weekdaystatus<-as.factor(dat2$weekdaystatus)
class(dat2$weekdaystatus)
par(mfcol=c(1,2))
library(lattice)
?xyplot
with(dat2,plot(interval,steps))
with(dat2,plot(interval,steps,type="l"))
?subset
end<-subset(dat2,dat2$weekdaystatus=="weekend")
day<-subset(dat2,dat2$weekdaystatus=="weekday")
endmin<-with(end,tapply(steps,interval,mean))
daymin<-with(day,tapply(steps,interval,mean))
enddf<-data.frame(interval=as.numeric(names(endmin)),avgsteps=endmin)
daydf<-data.frame(interval=as.numeric(names(daymin)),avgsteps=daymin)
plot(enddf$interval,as.numeric(df$avgsteps),lwd=2)
plot(enddf$interval,as.numeric(df$avgsteps),lwd=2)
plot(enddf$interval,as.numeric(df$avgsteps),lwd=2,type="l")
plot(enddf$interval,as.numeric(enddf$avgsteps),lwd=2,type="l")
plot(enddf$interval,as.numeric(enddf$avgsteps),lwd=2,type="l")
plot(daydf$interval,as.numeric(daydf$avgsteps),lwd=2,type="l")
unique(daydf$interval)
unique(daydf$avgsteps)
sum(is.na(dat2$steps))
sum(is.na(min)
sum(is.na(min))
?within
dat2<-dat
dat2$steps<-ifelse(is.na(dat2$steps), min[dat2$interval], dat2$steps))
dat2$steps<-ifelse(is.na(dat2$steps), min[dat2$interval], dat2$steps)
sum(is.na(dat2$steps))
head(is.na(dat2$steps))
dim(min)
dim(dat)
17568/288
dat2$steps<-ifelse(is.na(dat2$steps), min[dat2$interval], dat2$steps)
head(dat2$interval)
dat2$steps<-ifelse(is.na(dat2$steps), min[rep(dat2$interval,61)], dat2$steps)
sum(is.na(dat2$steps))
dat2<-dat
dat2$steps<-ifelse(is.na(dat2$steps), min[rep(dat2$interval,61)], dat2$steps)
sum(is.na(dat2$steps))
dat2$interval[is.na(dat2$steps)]
min[255]
sum(is.na(dat$steps))
dat2$steps<-ifelse(is.na(dat2$steps), min[dat2$interval], dat2$steps)
sum(is.na(dat2$steps))
dat2$steps<-ifelse(is.na(dat2$steps), df$avgsteps[dat2$interval], dat2$steps)
sum(is.na(dat2$steps))
df<-data.frame(interval=as.numeric(names(min)),avgsteps=as.numeric(min)
df<-data.frame(interval=as.numeric(names(min)),avgsteps=as.numeric(min))
dat2$steps<-ifelse(is.na(dat2$steps), df$avgsteps[dat2$interval], dat2$steps)
sum(is.na(dat2$steps))
class(dat2$steps)
df$avgsteps[2010]
is.na(df$avgsteps)
sum(is.na(df$avgsteps))
dat2<-dat
dat2$steps<-ifelse(is.na(dat2$steps), df$avgsteps[dat2$interval/5], dat2$steps)
sum(is.na(dat2$steps)
sum(is.na(dat2$steps))
max(dat2$interval)
max(min)
max(df$interval)
df$avgsteps[2355]
df$avgsteps[2355/5]
dat2<-dat
df$avgsteps[df$interval==2355]
dat2$steps<-ifelse(is.na(dat2$steps), df$avgsteps[df$interval==dat2$interval], dat2$steps)
sum(is.na(dat2$steps))
sum(is.na(df$avgsteps))
dat2$interval[is.na(dat2$steps)]
df$interval==dat2$interval
dat2$steps<-ifelse(is.na(dat2$steps), df$avgsteps[dat2$interval==df$interval], dat2$steps)
sum(is.na(dat2$steps))
df$avgsteps[TRUE]
dat2<-dat
which(df$interval==5)
dat2$steps<-ifelse(is.na(dat2$steps), df$avgsteps[which(dat2$interval==df$interval)], dat2$steps)
sum(is.na(dat2$steps))
which(dat2$interval==df$interval)
which(df$interval==dat2$interval)
?which
dat2$steps<-ifelse(is.na(dat2$steps), df$avgsteps[which(df$interval==dat2$interval)], dat2$steps)
sum(is.na(dat2$steps))
dat2$steps<-ifelse(is.na(dat2$steps), mean(daily), dat2$steps)
sum(is.na(dat2$steps))
dat2<-dat
ex<-merge(min,dat,by.x="interval",by.y="interval")
?merge
ex<-merge(df,dat,by.x="interval",by.y="interval")
View(ex)
?order
2355/5
dim(dat2)
17568/472
17568/471
dim(dat)
17568/61
2355/5
dat2$avgdaily<-rep(daily,61)
dim(daily)
dat2$avgdaily<-rep(daily,each=288)
View(dat2)
dat2$steps<-ifelse(is.na(dat2$steps), dat2$avgdaily, dat2$steps)
sum(is.na(dat2$steps))
dat2$avgdaily<-NULL
head(dat2)
daily2<-with(dat2, tapply(steps, date, sum, na.rm=TRUE))
hist(daily2,xlab="Number of Steps Taken",main="Total Number of Steps Taken Each Day with Imputed Values",col="red")
mean(daily2)
median(daily2)
dat2$weekdaystatus<-ifelse((weekdays(dat2$date)=="Saturday"|weekdays(dat2$date)=="Sunday"),"weekend","weekday")
dat2$weekdaystatus<-as.factor(dat2$weekdaystatus)
end<-subset(dat2,dat2$weekdaystatus=="weekend")
day<-subset(dat2,dat2$weekdaystatus=="weekday")
endmin<-with(end,tapply(steps,interval,mean))
daymin<-with(day,tapply(steps,interval,mean))
enddf<-data.frame(interval=as.numeric(names(endmin)),avgsteps=endmin)
daydf<-data.frame(interval=as.numeric(names(daymin)),avgsteps=daymin)
par(mfcol=c(1,2))
plot(daydf$interval,as.numeric(daydf$avgsteps),lwd=2,type="l",xlab="5-minute interval",ylab="average number of steps taken",main="Weekday Average Number of Steps by 5-minute Interval")
plot(enddf$interval,as.numeric(enddf$avgsteps),lwd=2,type="l",xlab="5-minute interval",ylab="average number of steps taken",main="Weekend Average Number of Steps by 5-minute Interval")
plot(daydf$interval,as.numeric(daydf$avgsteps),lwd=2,type="l",xlab="5-minute interval",ylab="average number of steps taken",main="Weekday")
plot(enddf$interval,as.numeric(enddf$avgsteps),lwd=2,type="l",xlab="5-minute interval",ylab="average number of steps taken",main="Weekend")
par(mfcol=c(2,1))
plot(daydf$interval,as.numeric(daydf$avgsteps),lwd=2,type="l",xlab="5-minute interval",ylab="average number of steps taken",main="Weekdays")
plot(enddf$interval,as.numeric(enddf$avgsteps),lwd=2,type="l",xlab="5-minute interval",ylab="average number of steps taken",main="Weekends")
plot(daydf$interval,as.numeric(daydf$avgsteps),lwd=2,type="l",xlab="5-minute interval",ylab="average number of steps taken",main="Weekday Average Number of Steps by 5-minute Interval")
plot(enddf$interval,as.numeric(enddf$avgsteps),lwd=2,type="l",xlab="5-minute interval",ylab="average number of steps taken",main="Weekend Average Number of Steps by 5-minute Interval")
max(df$avgsteps)
plot(daydf$interval,as.numeric(daydf$avgsteps),lwd=2,type="l",xlab="5-minute interval",ylab="average number of steps taken",main="Weekday Average Number of Steps by 5-minute Interval",ylim=c(0,210))
plot(enddf$interval,as.numeric(enddf$avgsteps),lwd=2,type="l",xlab="5-minute interval",ylab="average number of steps taken",main="Weekend Average Number of Steps by 5-minute Interval",ylim=c(0,210))
read.csv("activity.csv",header = TRUE)
unzip("activity.zip")
q()
